@model PMT.Entities.Transaction
@{
    ViewBag.Title = ViewText.TransactionViewEditTitle;
}
<div class="panel panel-primary use-big-fonts">
    <div class="panel-heading">@ViewBag.Title</div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.TransactionId)
                <input type="hidden" id="initialSubCategoryId" value="@Model.SubCategoryId" />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.MoneyAccountId, ModelText.MoneyAccountName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("MoneyAccountId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MoneyAccountId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionType, ModelText.TransactionTransactionType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EnumDropDownListFor(model => model.TransactionType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group categoryListDropDown">
                    @Html.Label("categoryBtn", ModelText.CategoryName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        <div class="dropdown">
                            <button href="#" class="btn btn-default dropdown-toggle selectdd" type="button" id="categoryBtn" value="" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                <i>@ViewText.NoneSelected</i>
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu selectdd dropdown-category scrollable-menu" aria-labelledby="categoryBtn"></ul>
                        </div>
                        @Html.HiddenFor(model => model.CategoryId)
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group subCategoryListDropDown">
                    @Html.Label("subCategoryBtn", ModelText.SubCategoryName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        <div class="dropdown">
                            <button class="btn btn-default dropdown-toggle selectdd" type="button" id="subCategoryBtn" value="" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                <span>@ViewText.NoneSelected</span>
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu selectdd dropdown-subcategory scrollable-menu" aria-labelledby="subCategoryBtn"></ul>
                        </div>
                        @Html.HiddenFor(model => model.SubCategoryId)
                        @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group transferDropDown hidden">
                    @Html.LabelFor(model => model.TransferTo, ModelText.TransactionTransferTo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        <select class="form-control" id="TransferTo" name="TransferTo"></select>
                        @Html.ValidationMessageFor(model => model.TransferTo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionDate, ModelText.TransactionDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        <input class="form-control datepicker text-box single-line" data-val="true" data-val-date="The field Date must be a date."
                               data-val-required="The Date field is required." id="TransactionDate" name="TransactionDate" type="text" value="@Model.TransactionDate.ToShortDateString()" />
                        @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, ModelText.TransactionDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, ModelText.TransactionAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-7">
                        <input type="submit" value=@ViewText.Save class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        <div>
            <a href="@Url.Action("Index","Transactions",null)" class="btn btn-info"><i class="fa fa-fw fa-arrow-left"></i> @ViewText.Back</a>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            pmt.onDocumentTransactionCreate();
            var format = (dateTimeCalculations.getLocaleDateString()).toUpperCase();
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, format, true).isValid();
            }
            
            $.validator.methods.number = function (value, element) {
                var a = Globalize.parseFloat(value);
                var b = jQuery.isNumeric(Globalize.parseFloat(value));
                return this.optional(element) || jQuery.isNumeric(Globalize.parseFloat(value));
            };
        });
    </script>
}
