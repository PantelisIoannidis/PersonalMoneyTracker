@model PMT.Entities.Transaction
@{
    ViewBag.Title = ViewText.TransactionViewCreateTitle;
}

<div class="panel panel-primary use-big-fonts">
    <div class="panel-heading">@ViewBag.Title</div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.HiddenFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.MoneyAccountId, ModelText.MoneyAccountName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("MoneyAccountId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MoneyAccountId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, ModelText.CategoryName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        <select class="form-control" id="CategoryId" name="CategoryId"></select>
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SubCategoryId, ModelText.SubCategoryName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        <select class="form-control" id="SubCategoryId" name="SubCategoryId"></select>
                        @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionType, ModelText.TransactionTransactionType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EnumDropDownListFor(model => model.TransactionType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TransferTo, ModelText.TransactionTransferTo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        <select class="form-control" id="TransferTo" name="TransferTo"></select>
                        @Html.ValidationMessageFor(model => model.TransferTo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TransactionDate, ModelText.TransactionDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, ModelText.TransactionDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, ModelText.TransactionAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-7">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            pmt.onDocumentTransactionCreate();
        });
    </script>
}
